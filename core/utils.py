from db.models import User
from sqlalchemy import select, or_
from db.base import async_session_maker
import re

def is_valid_cyrillic_name(full_name: str) -> bool:
    pattern = r"^[–ê-–Ø–Å][–∞-—è—ë]+ [–ê-–Ø–Å][–∞-—è—ë]+$"
    return bool(re.match(pattern, full_name))


def make_complaint_text(data: dict) -> str:
    user = data.get("user")
    return (
            f"<b>‚õîÔ∏è –ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∂–∞–ª–æ–±–∞:</b>\n"
            f"@{user.username or '‚Äî'}\n"
            f"<b>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è:</b> {user.full_name or '‚Äî'}\n"
            f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {user.phone_number}\n"
            f"<b>–ê–¥—Ä–µ—Å:</b> {data['address']}\n"
            f"<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b> {data['body']}\n"
            # f"üÜî reply_to_user_id:{user.id}"
        )

def make_callback_application(data: dict) -> str:
    user = data.get("user")
    return (
            f"<b>üìû –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å:</b>\n"
            f"@{user.username or '‚Äî'}\n"
            f"<b>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è:</b> {user.full_name or '‚Äî'}\n"
            f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {user.phone_number}\n"
            # f"üÜî reply_to_user_id:{user.id}"
        )


async def get_all_user_ids():
    async with async_session_maker() as session:
        result = await session.execute(select(User.telegram_id))
        return [row[0] for row in result.all()]


async def get_user_by_telegram_id_or_username(query: str):
    async with async_session_maker() as session:
        stmt = select(User).where(
            or_(
                User.telegram_id == int(query) if query.isdigit() else False,
                User.username == query
            )
        )
        result = await session.execute(stmt)
        return result.scalars().first()
    

