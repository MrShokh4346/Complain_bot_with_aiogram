from db.crud.user_crud import get_user_by_telegram_id_or_username
from db.models import Question, User
from sqlalchemy import select, or_
from db.base import async_session_maker
import re

def is_valid_cyrillic_name(full_name: str) -> bool:
    pattern = r"^[–ê-–Ø–Å][–∞-—è—ë]+ [–ê-–Ø–Å][–∞-—è—ë]+$"
    return bool(re.match(pattern, full_name))


async def make_user_info_text(parts: list) -> str:
    
    user_id = parts[1]
    user = await get_user_by_telegram_id_or_username(user_id)
    if user:
        info = (
            f"üë§ ID: {user.id}\n"
            f"üî∏ Username: @{user.username}\n"
            f"üë§ –ò–º—è –∏ –§–∞–º–∏–ª–∏—è: {user.full_name}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user.phone_number}\n"
            f"üìÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {user.created_at.strftime("%Y-%m-%d %H:%M")}\n"
            f"üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: {'–î–∞' if user.is_blocked else '–ù–µ—Ç'}"
        )
        return info
    info = ("‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. ")
    return info


def make_complaint_text(data: dict) -> str:
    user = data.get("user")
    return (
            f"<b>‚õîÔ∏è –ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∂–∞–ª–æ–±–∞:</b>\n"
            f"@{user.username or '‚Äî'} (id: {user.id})\n"
            f"<b>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è:</b> {user.full_name or '‚Äî'}\n"
            f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {user.phone_number}\n"
            f"<b>–ê–¥—Ä–µ—Å:</b> {data['address']}\n"
            f"<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b> {data['body']}\n"
            # f"üÜî reply_to_user_id:{user.id}"
        )


def make_suggestion_text(data: dict) -> str:
    user = data.get("user")
    return (
            f"<b>‚õîÔ∏è –ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ :</b>\n"
            f"@{user.username or '‚Äî'} (id: {user.id})\n"
            f"<b>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è:</b> {user.full_name or '‚Äî'}\n"
            f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {user.phone_number}\n"
            f"<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b> {data['body']}\n"
            # f"üÜî reply_to_user_id:{user.id}"
        )


def make_callback_application(data: dict) -> str:
    user = data.get("user")
    return (
            f"<b>üìû –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç—å:</b>\n"
            f"@{user.username or '‚Äî'}\n"
            f"<b>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è:</b> {user.full_name or '‚Äî'}\n"
            f"<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {user.phone_number}\n"
            # f"üÜî reply_to_user_id:{user.id}"
        )
