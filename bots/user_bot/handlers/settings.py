from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bots.user_bot.states import SettingsState

# For now, store in-memory (replace with DB later)
USER_DATA = {}

router = Router()

@router.message(F.text.lower().contains("–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"))
async def settings_menu(message: Message, state: FSMContext):
    user_id = message.from_user.id
    profile = USER_DATA.get(user_id, {"name": "‚Äî", "phone": "‚Äî"})

    text = (
        f"üõ† –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n"
        f"üë§ –§–ò–û: {profile['name']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {profile['phone']}\n\n"
        "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?"
    )
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û", callback_data="settings_change_name")
    builder.button(text="üì± –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data="settings_change_phone")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")

    await state.set_state(SettingsState.choose)
    await message.answer(text, reply_markup=builder.as_markup())

@router.callback_query(F.data == "settings_change_name")
async def ask_name(callback: CallbackQuery, state: FSMContext):
    await state.set_state(SettingsState.set_name)
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è:")

@router.message(SettingsState.set_name)
async def save_name(message: Message, state: FSMContext):
    user_id = message.from_user.id
    USER_DATA.setdefault(user_id, {})["name"] = message.text
    await message.answer("–§–ò–û —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ ‚úÖ")
    await state.clear()

@router.callback_query(F.data == "settings_change_phone")
async def ask_phone(callback: CallbackQuery, state: FSMContext):
    await state.set_state(SettingsState.set_phone)
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

@router.message(SettingsState.set_phone)
async def save_phone(message: Message, state: FSMContext):
    user_id = message.from_user.id
    USER_DATA.setdefault(user_id, {})["phone"] = message.text
    await message.answer("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω ‚úÖ")
    await state.clear()
