from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bots.common.texts import Texts
from bots.user_bot.keyboards.main_menu import main_menu_keyboard
from bots.user_bot.keyboards.settings import settings_navigation_buttons
from bots.user_bot.states import SettingsState
from core.utils import is_valid_cyrillic_name
from db.crud import add_or_update_user


router = Router()


@router.message(F.text.lower().contains("–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"))
async def settings_menu(message: Message, state: FSMContext):
    await message.answer(Texts.get_settings_text(), reply_markup=settings_navigation_buttons())


@router.callback_query(F.data == "settings_change_name")
async def ask_name(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(SettingsState.set_name)
    await callback.message.answer("üõ† –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—ë –ò–º—è –∏ –§–∞–º–∏–ª–∏—é, —á—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")


@router.message(SettingsState.set_name)
async def save_name(message: Message, state: FSMContext):
    user_id = message.from_user.id
    if is_valid_cyrillic_name(message.text):
        await add_or_update_user(user_id, full_name=message.text)
        await message.answer("üõ†‚úÖüõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã", reply_markup=main_menu_keyboard())
        await state.clear()
        return
    await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤).")


@router.callback_query(F.data == "settings_change_phone")
async def ask_phone(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(SettingsState.set_phone)
    await callback.message.answer("üõ† –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")


@router.message(SettingsState.set_phone)
async def save_phone(message: Message, state: FSMContext):
    user_id = message.from_user.id
    if not message.text.startswith("+7") or len(message.text) != 12 or not message.text[2:].isdigit():
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX.")
        return
    await add_or_update_user(user_id, phone_number=message.text)
    await message.answer("üõ†‚úÖüõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ–º–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã", reply_markup=main_menu_keyboard())
    await state.clear()


@router.callback_query(F.data == "settings_back")
async def settings_back(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.clear()
    await callback.message.edit_text(Texts.get_main_menu_text())