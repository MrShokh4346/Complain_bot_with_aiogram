from aiogram import Router
from aiogram.types import Message
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import F
import re

router = Router()

@router.message(commands=["start"])
async def admin_start(message: Message):
    builder = InlineKeyboardBuilder()
    builder.button(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")
    builder.button(text="üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="admin_users")
    builder.button(text="üö´ –ë–ª–æ–∫/–†–∞–∑–±–ª–æ–∫", callback_data="admin_block")
    builder.button(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å", callback_data="admin_reply")
    builder.button(text="üìû –ó–∞—è–≤–∫–∏ –Ω–∞ –∑–≤–æ–Ω–æ–∫", callback_data="admin_calls")

    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å üëÆ‚Äç‚ôÇÔ∏è\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=builder.as_markup()
    )


@router.message(F.reply_to_message)
async def reply_to_user(message: Message):
    original_text = message.reply_to_message.text or message.reply_to_message.caption
    if not original_text:
        return

    # Extract user_id
    match = re.search(r"reply_to_user_id:(\d+)", original_text)
    if not match:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
        return

    user_id = int(match.group(1))
    try:
        if message.photo:
            await message.bot.send_photo(user_id, photo=message.photo[-1].file_id, caption=message.caption or "")
        elif message.text:
            await message.bot.send_message(user_id, message.text)
        else:
            await message.answer("‚ö†Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏ —Ñ–æ—Ç–æ.")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {e}")

